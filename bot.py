# bot/bot.py

import logging
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)
import config
from bot.recommender import recommend

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ ¬´–æ –∫—É—Ä—Å–∞—Ö¬ª
COURSE_KEYWORDS = ["–∫—É—Ä—Å", "–¥–∏—Å—Ü–∏–ø–ª–∏–Ω", "—Ä–µ–∫–æ–º–µ–Ω–¥", "–∏–Ω—Ç–µ—Ä–µ—Å", "–±—ç–∫–≥—Ä–∞—É–Ω–¥"]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    """
    user = update.effective_user
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤—ã–±—Ä–∞—Ç—å —ç–ª–µ–∫—Ç–∏–≤–Ω—ã–µ –∫—É—Ä—Å—ã –≤ –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–µ –ò–¢–ú–û.\n"
        "–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ—ë–º –±—ç–∫–≥—Ä–∞—É–Ω–¥–µ –∏–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö, –∏ —è –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∫—É—Ä—Å—ã."
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
    """
    await update.message.reply_text(
        "/start ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "/help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
        "–û–ø–∏—à–∏ —Å–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏–ª–∏ –±—ç–∫–≥—Ä–∞—É–Ω–¥, –∏ —è –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É—é —ç–ª–µ–∫—Ç–∏–≤–Ω—ã–µ –∫—É—Ä—Å—ã."
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:
    - –µ—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –µ—Å—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –ø—Ä–æ –∫—É—Ä—Å—ã, –≤—ã–¥–∞—ë–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    - –∏–Ω–∞—á–µ ‚Äî —Å–æ–æ–±—â–∞–µ–º, —á—Ç–æ –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –∫—É—Ä—Å–∞—Ö
    """
    text = update.message.text.strip()
    text_lower = text.lower()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    if any(keyword in text_lower for keyword in COURSE_KEYWORDS):
        # –ó–∞–ø—Ä–æ—Å –ø—Ä–æ –∫—É—Ä—Å—ã ‚Äî –≤—ã–¥–∞—ë–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        try:
            recs = recommend(text, top_n=5)
            if recs:
                reply = "–í–æ—Ç –∫—É—Ä—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —è —Ä–µ–∫–æ–º–µ–Ω–¥—É—é:\n" + "\n".join(f"- {c}" for c in recs)
            else:
                reply = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ —Å–º–æ–≥ –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫—É—Ä—Å—ã –ø–æ —Ç–≤–æ–µ–º—É –æ–ø–∏—Å–∞–Ω–∏—é."
        except Exception as e:
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: %s", e)
            reply = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–±–æ—Ä–µ –∫—É—Ä—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑."
    else:
        # –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø—Ä–æ –∫—É—Ä—Å—ã
        reply = (
            "–ò–∑–≤–∏–Ω–∏, —è –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ —ç–ª–µ–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—Å–∞—Ö "
            "–º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã –ò–¢–ú–û.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏ —Å–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏–ª–∏ –±—ç–∫–≥—Ä–∞—É–Ω–¥, "
            "–∏ —è –ø–æ–¥–±–µ—Ä—É –¥–ª—è —Ç–µ–±—è –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã."
        )

    await update.message.reply_text(reply)

def main() -> None:
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
    """
    app = (
        ApplicationBuilder()
        .token(config.TELEGRAM_TOKEN)
        .build()
    )

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –∏ —Ö–µ–Ω–¥–ª–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(
        MessageHandler(
            filters.TEXT & (~filters.COMMAND),
            handle_message
        )
    )

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏–π...")
    app.run_polling()

if __name__ == "__main__":
    main()
